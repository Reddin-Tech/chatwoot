name: Deploy Application

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Instance
        uses: Burnett01/rsync-deployments@7.0.1
        with:
          switches: -avzr --delete --exclude=".git" --exclude=".env"
          path: ./
          remote_path: chatwoot
          remote_host: ec2-44-192-63-173.compute-1.amazonaws.com
          remote_user: ${{ secrets.EC2_USER }}
          remote_key: ${{ secrets.EC2_SSH_KEY }}

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3

      - name: Download Doppler secrets
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
        run: |
          doppler secrets download --no-file --format env > .env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image
        env:
          ECR_REGISTRY: 881490098858.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: chatwoot
          IMAGE_TAG: latest
        run: |
          docker compose -f docker-compose.build.yaml build base
          docker tag chatwoot-base:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # - name: Start application with Docker Compose
      #   uses: appleboy/ssh-action@v1.2.0
      #   with:
      #     host: ec2-44-192-63-173.compute-1.amazonaws.com
      #     username: ${{ secrets.EC2_USER }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       chmod +x run_chatwoot.sh
      #       ./run_chatwoot.sh
